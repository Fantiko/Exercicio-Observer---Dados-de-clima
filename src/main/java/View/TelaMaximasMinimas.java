/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package View;

import Presenter.MaximasMinimas;
import dado.DadoClima;
import Observer.Observer;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;

import javax.swing.*;
import java.util.List;

/**
 *
 * @author kaios
 */
public class TelaMaximasMinimas extends javax.swing.JInternalFrame implements Observer {
    private List<DadoClima> dadosClima;
    MaximasMinimas maximasMinimas;
    /**
     * Creates new form TelaMaximasMinimas
     */
    public TelaMaximasMinimas() {
        this.maximasMinimas = new MaximasMinimas(this.dadosClima);
        initComponents();
        setVisible(true);

        CategoryDataset dataset = criarDataset();
        JFreeChart grafico = ChartFactory.createBarChart("Maximas e minimas","Categoria", "Valor", dataset, PlotOrientation.VERTICAL,true, true, true);

        ChartPanel painelGrafico = new ChartPanel(grafico);
        setContentPane(painelGrafico);

    }

    private CategoryDataset criarDataset() {
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        // Adiciona valores ao dataset
        dataset.addValue(maximasMinimas.maxTemp, "Maxima", "Temperatura");
        dataset.addValue(maximasMinimas.maxUmidade, "Maxima", "Umidade");
        dataset.addValue(maximasMinimas.maxPressao, "Maxima", "Pressao");

        dataset.addValue(maximasMinimas.minTemp, "Minima", "Temperatura");
        dataset.addValue(maximasMinimas.minUmidade, "Minima", "Umidade");
        dataset.addValue(maximasMinimas.minPressao, "Minima", "Pressao");


        return dataset;
    }




    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setIconifiable(true);
        setTitle("Maximas e Minimas");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 394, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 274, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents




    @Override
    public void atualizar(List<DadoClima> dadoClimaList) {
        this.dadosClima = dadoClimaList;

        maximasMinimas.dadosClima = dadoClimaList;

        maximasMinimas.exibirMaximasMinimas();

        CategoryDataset dataset = criarDataset();

        JFreeChart grafico = ChartFactory.createBarChart("Maximas e minimas","Categoria", "Valor", dataset, PlotOrientation.VERTICAL,true, true, true);
        ChartPanel painelGrafico = new ChartPanel(grafico);

        setContentPane(painelGrafico);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
